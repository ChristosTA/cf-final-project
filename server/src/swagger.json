{
  "openapi": "3.0.3",
  "info": {
    "title": "Marketplace API",
    "version": "1.0.0",
    "description": "MVP2 – Auth, Users, Categories, Listings (photos upload), Orders (messages), Reviews, Sellers"
  },
  "servers": [
    { "url": "http://localhost:4000/api" },
    { "url": "http://localhost:4000" }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": { "type": "http", "scheme": "bearer", "bearerFormat": "JWT" }
    },
    "schemas": {
      "ApiMessage": {
        "type": "object",
        "properties": { "message": { "type": "string" } }
      },
      "UserPublic": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "username": { "type": "string" },
          "name": { "type": "string", "nullable": true },
          "roles": { "type": "array", "items": { "type": "string" } },
          "serial": { "type": "integer", "nullable": true },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "name": { "type": "string" },
          "slug": { "type": "string" },
          "parentId": { "type": "string", "nullable": true },
          "path": { "type": "array", "items": { "type": "string" } },
          "createdAt": { "type": "string", "format": "date-time" },
          "updatedAt": { "type": "string", "format": "date-time" }
        }
      },
      "ListingPhotoVariant": {
        "type": "object",
        "properties": {
          "name": { "type": "string", "example": "thumb" },
          "url": { "type": "string", "format": "uri" }
        }
      },
      "ListingPhoto": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "url": { "type": "string" },
          "isCover": { "type": "boolean" },
          "provider": { "type": "string", "enum": ["local","cloudinary"] },
          "key": { "type": "string" },
          "variants": { "type": "array", "items": { "$ref": "#/components/schemas/ListingPhotoVariant" } }
        }
      },
      "Listing": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "serial": { "type": "integer" },
          "publicId": { "type": "string" },
          "sellerId": { "type": "string" },
          "title": { "type": "string" },
          "description": { "type": "string" },
          "condition": { "type": "string", "enum": ["NEW_WITH_TAGS","NEW","EXCELLENT","GOOD","FAIR"] },
          "price": { "type": "number" },
          "currency": { "type": "string" },
          "photos": { "type": "array", "items": { "$ref": "#/components/schemas/ListingPhoto" } },
          "tags": { "type": "array", "items": { "type": "string" } },
          "status": { "type": "string", "enum": ["ACTIVE","RESERVED","SOLD","HIDDEN"] },
          "categories": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": { "type": "string" },
                "name": { "type": "string" },
                "slug": { "type": "string" }
              }
            }
          },
          "metrics": {
            "type": "object",
            "properties": { "views": { "type": "integer" } }
          },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "ListingCreate": {
        "type": "object",
        "required": ["title", "price"],
        "properties": {
          "title": { "type": "string", "example": "Nike Hoodie" },
          "description": { "type": "string", "example": "Ζεστό, λίγο φορεμένο" },
          "condition": { "type": "string", "enum": ["NEW_WITH_TAGS","NEW","EXCELLENT","GOOD","FAIR"], "example": "GOOD" },
          "price": { "type": "number", "example": 1090 },
          "currency": { "type": "string", "example": "EUR" },
          "tags": { "type": "array", "items": { "type": "string" }, "example": ["hoodie","adidas"] },
          "categories": { "type": "array", "items": { "type": "string" }, "example": ["hoodie"] }
        }
      },
      "ListingUpdate": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "description": { "type": "string" },
          "condition": { "type": "string", "enum": ["NEW_WITH_TAGS","NEW","EXCELLENT","GOOD","FAIR"] },
          "price": { "type": "number" },
          "currency": { "type": "string" },
          "tags": { "type": "array", "items": { "type": "string" } },
          "status": { "type": "string", "enum": ["ACTIVE","RESERVED","SOLD","HIDDEN"] },
          "categories": { "type": "array", "items": { "type": "string" } }
        }
      },
      "OrderMessage": {
        "type": "object",
        "properties": {
          "_id": { "type": "string" },
          "senderId": { "type": "string" },
          "text": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "Order": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "serial": { "type": "integer" },
          "listingId": { "type": "string" },
          "buyerId": { "type": "string" },
          "sellerId": { "type": "string" },
          "status": { "type": "string", "enum": ["PENDING","ACCEPTED","DECLINED","CANCELLED","COMPLETED"] },
          "messages": { "type": "array", "items": { "$ref": "#/components/schemas/OrderMessage" } },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "OrderCreate": {
        "type": "object",
        "required": ["listingId"],
        "properties": {
          "listingId": { "type": "string", "description": "serial | uuid | _id" },
          "note": { "type": "string" }
        },
        "example": { "listingId": "3", "note": "Θα το παραλάβω Δευτέρα" }
      },
      "PostOrderMessage": {
        "type": "object",
        "required": ["text"],
        "properties": { "text": { "type": "string" } },
        "example": { "text": "Γεια, πότε το στέλνεις;" }
      },
      "Review": {
        "type": "object",
        "properties": {
          "id": { "type": "string" },
          "orderId": { "type": "string" },
          "sellerId": { "type": "string" },
          "buyerId": { "type": "string" },
          "rating": { "type": "integer", "minimum": 1, "maximum": 5 },
          "comment": { "type": "string" },
          "createdAt": { "type": "string", "format": "date-time" }
        }
      },
      "ReviewCreate": {
        "type": "object",
        "required": ["orderId", "rating", "comment"],
        "properties": {
          "orderId": { "type": "string" },
          "rating": { "type": "integer", "minimum": 1, "maximum": 5 },
          "comment": { "type": "string" }
        },
        "example": { "orderId": "12", "rating": 5, "comment": "Άψογος!" }
      },
      "SellerSummary": {
        "type": "object",
        "properties": {
          "seller": { "$ref": "#/components/schemas/UserPublic" },
          "stats": {
            "type": "object",
            "properties": {
              "activeListings": { "type": "integer" },
              "rating": {
                "type": "object",
                "properties": {
                  "avg": { "type": "number" },
                  "count": { "type": "integer" }
                }
              }
            }
          }
        }
      }
    }
  },
  "security": [],
  "paths": {
    "/health": {
      "get": {
        "tags": ["Info"],
        "summary": "Health check",
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email","username","password"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "username": { "type": "string" },
                  "name": { "type": "string" },
                  "password": { "type": "string", "format": "password" }
                }
              },
              "example": { "email": "new@user.com", "username": "newuser", "password": "secret123" }
            }
          }
        },
        "responses": { "201": { "description": "Created" }, "409": { "description": "Conflict" } }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "Login",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email","password"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" }
                }
              },
              "example": { "email": "panos@gmail.com", "password": "secret123" }
            }
          }
        },
        "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout (client-side token drop)",
        "security": [{ "bearerAuth": [] }],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/auth/password": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Change password",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["currentPassword","newPassword"],
                "properties": {
                  "currentPassword": { "type": "string" },
                  "newPassword": { "type": "string" }
                }
              },
              "example": { "currentPassword": "secret123", "newPassword": "newsecret456" }
            }
          }
        },
        "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }
      }
    },
    "/users": {
      "get": {
        "tags": ["Users (admin)"],
        "summary": "List users",
        "security": [{ "bearerAuth": [] }],
        "responses": { "200": { "description": "OK" }, "403": { "description": "Forbidden" } }
      }
    },
    "/users/me": {
      "get": {
        "tags": ["Users"],
        "summary": "Who am I",
        "security": [{ "bearerAuth": [] }],
        "responses": { "200": { "description": "OK" }, "401": { "description": "Unauthorized" } }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Update my profile (name)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "type": "object", "properties": { "name": { "type": "string" } }, "required": ["name"] },
              "example": { "name": "Panos" }
            }
          }
        },
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/users/{id}": {
      "delete": {
        "tags": ["Users (admin)"],
        "summary": "Delete user",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"},"description":"serial | uuid | _id"}],
        "responses": { "200": { "description": "OK" }, "403": { "description": "Forbidden" } }
      }
    },
    "/users/{id}/roles": {
      "put": {
        "tags": ["Users (admin)"],
        "summary": "Update roles",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"},"description":"serial | uuid | _id"}],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "type": "object", "properties": { "roles": { "type": "array", "items": { "type":"string", "enum":["USER","SELLER","ADMIN"] } } }, "required": ["roles"] },
              "example": { "roles": ["USER","SELLER"] } }
          }
        },
        "responses": { "200": { "description": "OK" }, "403": { "description": "Forbidden" } }
      }
    },
    "/categories": {
      "get": {
        "tags": ["Categories"],
        "summary": "List categories",
        "parameters": [
          { "name":"parent","in":"query","schema":{"type":"string"},"description":"parent id | 'root'"},
          { "name":"q","in":"query","schema":{"type":"string"} }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "post": {
        "tags": ["Categories (admin)"],
        "summary": "Create category",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "$ref": "#/components/schemas/Category" }, "example": { "name": "Hoodie" } }
          }
        },
        "responses": { "201": { "description": "Created" }, "403": { "description": "Forbidden" } }
      }
    },
    "/categories/{slugOrId}": {
      "get": {
        "tags": ["Categories"],
        "summary": "Get category by slug or id",
        "parameters": [{ "name":"slugOrId","in":"path","required":true,"schema":{"type":"string"} }],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not found" } }
      }
    },
    "/categories/{id}": {
      "patch": {
        "tags": ["Categories (admin)"],
        "summary": "Update category",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": { "schema": { "type": "object", "properties": { "name": { "type":"string" }, "slug": { "type":"string" }, "parentId": { "type":"string","nullable":true } } } }
          }
        },
        "responses": { "200": { "description": "OK" } }
      },
      "delete": {
        "tags": ["Categories (admin)"],
        "summary": "Delete category",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "responses": { "200": { "description": "OK" }, "400": { "description": "Has children" } }
      }
    },
    "/listings": {
      "get": {
        "tags": ["Listings"],
        "summary": "Search/list listings",
        "parameters": [
          { "name":"q","in":"query","schema":{"type":"string"} },
          { "name":"category","in":"query","schema":{"type":"string"},"description":"slug | id | serial" },
          { "name":"seller","in":"query","schema":{"type":"string"},"description":"serial | uuid | _id (seller)" },
          { "name":"condition","in":"query","schema":{"type":"string"} },
          { "name":"priceMin","in":"query","schema":{"type":"number"} },
          { "name":"priceMax","in":"query","schema":{"type":"number"} },
          { "name":"sort","in":"query","schema":{"type":"string","enum":["newest","price_asc","price_desc"]} },
          { "name":"page","in":"query","schema":{"type":"integer"} },
          { "name":"limit","in":"query","schema":{"type":"integer"} }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "post": {
        "tags": ["Listings"],
        "summary": "Create listing (SELLER/ADMIN)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListingCreate" } } }
        },
        "responses": { "201": { "description": "Created" }, "403": { "description": "Forbidden" } }
      }
    },
    "/listings/{id}": {
      "get": {
        "tags": ["Listings"],
        "summary": "Get listing by id (serial|uuid|_id)",
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not found" } }
      },
      "put": {
        "tags": ["Listings"],
        "summary": "Update listing",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListingUpdate" } } }
        },
        "responses": { "200": { "description": "OK" }, "403": { "description": "Forbidden" } }
      },
      "delete": {
        "tags": ["Listings"],
        "summary": "Delete listing (cleanup photos too)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "responses": { "200": { "description": "OK" }, "403": { "description": "Forbidden" } }
      }
    },
    "/listings/{id}/photos": {
      "post": {
        "tags": ["Listings"],
        "summary": "Upload photos (multipart, field: photos[])",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"},"description":"serial | uuid | _id" }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "photos": {
                    "type": "array",
                    "items": { "type": "string", "format": "binary" }
                  }
                },
                "required": ["photos"]
              }
            }
          }
        },
        "responses": { "200": { "description": "OK" }, "415": { "description": "Only images allowed" } }
      }
    },
    "/listings/{id}/photos/{photoId}": {
      "delete": {
        "tags": ["Listings"],
        "summary": "Remove one photo",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name":"id","in":"path","required":true,"schema":{"type":"string"} },
          { "name":"photoId","in":"path","required":true,"schema":{"type":"string"} }
        ],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not found" } }
      }
    },
    "/listings/{id}/photos/{photoId}/cover": {
      "patch": {
        "tags": ["Listings"],
        "summary": "Set cover photo",
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name":"id","in":"path","required":true,"schema":{"type":"string"} },
          { "name":"photoId","in":"path","required":true,"schema":{"type":"string"} }
        ],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not found" } }
      }
    },
    "/listings/{id}/photos/reorder": {
      "put": {
        "tags": ["Listings"],
        "summary": "Reorder photos",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "requestBody": {
          "required": true,
          "content": { "application/json": {
            "schema": {
              "type": "object",
              "properties": { "photoIds": { "type": "array", "items": { "type": "string" } } },
              "required": ["photoIds"]
            },
            "example": { "photoIds": ["<photoId2>","<photoId1>","<photoId3>"] }
          }}
        },
        "responses": { "200": { "description": "OK" }, "400": { "description": "Bad request" } }
      }
    },
    "/orders": {
      "post": {
        "tags": ["Orders"],
        "summary": "Create order for listing",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/OrderCreate" } } }
        },
        "responses": { "201": { "description": "Created" }, "409": { "description": "Listing not available" } }
      }
    },
    "/orders/{id}": {
      "get": {
        "tags": ["Orders"],
        "summary": "Get order (buyer/seller only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "responses": { "200": { "description": "OK" }, "403": { "description": "Forbidden" }, "404": { "description": "Not found" } }
      }
    },
    "/orders/{id}/accept": {
      "patch": {
        "tags": ["Orders"],
        "summary": "Seller accepts order",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "responses": { "200": { "description": "OK" }, "403": { "description": "Forbidden" } }
      }
    },
    "/orders/{id}/decline": {
      "patch": {
        "tags": ["Orders"],
        "summary": "Seller declines order",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/orders/{id}/cancel": {
      "patch": {
        "tags": ["Orders"],
        "summary": "Buyer cancels order",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/orders/{id}/complete": {
      "patch": {
        "tags": ["Orders"],
        "summary": "Complete order (seller)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/orders/{id}/messages": {
      "get": {
        "tags": ["Orders"],
        "summary": "List messages (buyer/seller only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "responses": { "200": { "description": "OK" }, "403": { "description": "Forbidden" } }
      },
      "post": {
        "tags": ["Orders"],
        "summary": "Post message to order (buyer/seller only)",
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/PostOrderMessage" } } }
        },
        "responses": { "201": { "description": "Created" }, "403": { "description": "Forbidden" } }
      }
    },
    "/reviews": {
      "post": {
        "tags": ["Reviews"],
        "summary": "Create review (buyer, only COMPLETED order)",
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ReviewCreate" } } }
        },
        "responses": { "201": { "description": "Created" }, "400": { "description": "Only COMPLETED orders" }, "403": { "description": "Forbidden" } }
      }
    },
    "/reviews/seller/{id}": {
      "get": {
        "tags": ["Reviews"],
        "summary": "List reviews of seller",
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/sellers/{id}": {
      "get": {
        "tags": ["Sellers"],
        "summary": "Public seller summary",
        "parameters": [{ "name":"id","in":"path","required":true,"schema":{"type":"string"} }],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not found" } }
      }
    }
  }
}
