{
  "openapi": "3.0.3",
  "info": {
    "title": "Marketplace API",
    "version": "2.0.0",
    "description": "MVP2 – Auth, Users, Categories, Listings (filters), Photos upload, Orders + Messages, Favorites, Reviews."
  },
  "servers": [{ "url": "http://localhost:4000" }],
  "tags": [
    { "name": "Auth" },
    { "name": "Users" },
    { "name": "Categories" },
    { "name": "Listings" },
    { "name": "Orders" },
    { "name": "Favorites" },
    { "name": "Reviews" }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "summary": "Register a new user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/AuthRegisterBody" },
              "example": { "email": "panos@gmail.com", "username": "panos", "name": "Panos", "password": "secret123" }
            }
          }
        },
        "responses": {
          "201": { "description": "Created", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/AuthUserResponse" } } } },
          "409": { "description": "Email or username exists" },
          "422": { "description": "Validation error" }
        }
      }
    },

    "/api/auth/login": {
      "post": {
        "summary": "Login",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": { "$ref": "#/components/schemas/LoginBody" },
              "example": { "email": "panos@gmail.com", "password": "secret123" }
            }
          }
        },
        "responses": {
          "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/LoginResponse" } } } },
          "401": { "description": "Invalid credentials" }
        }
      }
    },

    "/api/auth/logout": {
      "post": {
        "summary": "Logout (stateless token - client just forgets it)",
        "tags": ["Auth"],
        "responses": {
          "200": { "description": "OK", "content": { "application/json": { "example": { "ok": true } } } }
        }
      }
    },

    "/api/auth/password": {
      "patch": {
        "summary": "Change password",
        "tags": ["Auth"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ChangePasswordBody" } } }
        },
        "responses": { "200": { "description": "OK" }, "401": { "description": "Invalid current password" } }
      }
    },

    "/api/users/me": {
      "get": {
        "summary": "Get current user",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": { "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UserPublic" } } } } }
      },
      "put": {
        "summary": "Update current user (name)",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "type": "object", "properties": { "name": { "type": "string" } }, "required": ["name"] } } }
        },
        "responses": { "200": { "description": "OK", "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UserPublic" } } } } }
      }
    },

    "/api/users": {
      "get": {
        "summary": "List users (ADMIN)",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "responses": { "200": { "description": "OK" } }
      }
    },

    "/api/users/{id}/roles": {
      "patch": {
        "summary": "Update user roles (ADMIN)",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" }, "description": "serial | uuid | _id" }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/UpdateRolesBody" }, "example": { "roles": ["USER", "SELLER"] } } }
        },
        "responses": { "200": { "description": "OK" }, "403": { "description": "Forbidden" } }
      }
    },

    "/api/users/{id}": {
      "delete": {
        "summary": "Delete user (ADMIN)",
        "tags": ["Users"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not found" } }
      }
    },

    "/api/categories": {
      "get": {
        "summary": "List categories",
        "tags": ["Categories"],
        "parameters": [
          { "name": "parent", "in": "query", "schema": { "type": "string", "enum": ["root"] }, "required": false },
          { "name": "q", "in": "query", "schema": { "type": "string" }, "required": false }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "post": {
        "summary": "Create category (ADMIN)",
        "tags": ["Categories"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": {
          "required": true,
          "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CategoryCreate" }, "example": { "name": "Hoodie" } } }
        },
        "responses": { "201": { "description": "Created" } }
      }
    },

    "/api/categories/{slugOrId}": {
      "get": {
        "summary": "Get category by slug or id",
        "tags": ["Categories"],
        "parameters": [{ "name": "slugOrId", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not found" } }
      }
    },

    "/api/categories/{id}": {
      "patch": {
        "summary": "Update category (ADMIN)",
        "tags": ["Categories"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/CategoryUpdate" } } } },
        "responses": { "200": { "description": "OK" } }
      },
      "delete": {
        "summary": "Delete category (ADMIN)",
        "tags": ["Categories"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK" }, "400": { "description": "Has children" } }
      }
    },

    "/api/listings": {
      "get": {
        "summary": "List listings (full filters)",
        "tags": ["Listings"],
        "parameters": [
          { "name": "q", "in": "query", "schema": { "type": "string" } },
          { "name": "categories", "in": "query", "description": "array or comma string (A,B)", "schema": { "type": "array", "items": { "type": "string" } }, "style": "form", "explode": true },
          { "name": "categoryMode", "in": "query", "schema": { "type": "string", "enum": ["any", "all"] }, "required": false },
          { "name": "includeChildren", "in": "query", "schema": { "type": "boolean" }, "required": false },
          { "name": "condition", "in": "query", "schema": { "type": "string", "enum": ["NEW_WITH_TAGS","NEW","EXCELLENT","GOOD","FAIR"] } },
          { "name": "priceMin", "in": "query", "schema": { "type": "number", "minimum": 0 } },
          { "name": "priceMax", "in": "query", "schema": { "type": "number", "minimum": 0 } },
          { "name": "sort", "in": "query", "schema": { "type": "string", "enum": ["newest","price_asc","price_desc"] } },
          { "name": "page", "in": "query", "schema": { "type": "integer", "minimum": 1, "default": 1 } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "minimum": 1, "maximum": 50, "default": 20 } },
          { "name": "seller", "in": "query", "schema": { "type": "string" }, "description": "serial | uuid | _id (seller)" }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "post": {
        "summary": "Create listing (SELLER/ADMIN)",
        "tags": ["Listings"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListingCreate" } } } },
        "responses": { "201": { "description": "Created" }, "403": { "description": "Forbidden" } }
      }
    },

    "/api/listings/{id}": {
      "get": {
        "summary": "Get listing by id (serial|uuid|_id)",
        "tags": ["Listings"],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not found" } }
      },
      "put": {
        "summary": "Update listing",
        "tags": ["Listings"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ListingUpdate" } } } },
        "responses": { "200": { "description": "OK" } }
      },
      "delete": {
        "summary": "Delete listing",
        "tags": ["Listings"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK" } }
      }
    },

    "/api/listings/{id}/photos": {
      "post": {
        "summary": "Upload photos to listing (multipart)",
        "tags": ["Listings"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "files": { "type": "array", "items": { "type": "string", "format": "binary" } }
                },
                "required": ["files"]
              }
            }
          }
        },
        "responses": { "201": { "description": "Created" } }
      }
    },

    "/api/listings/{id}/photos/{photoId}": {
      "delete": {
        "summary": "Delete photo from listing",
        "tags": ["Listings"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "photoId", "in": "path", "required": true, "schema": { "type": "string" } }
        ],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not found" } }
      }
    },

    "/api/orders": {
      "get": {
        "summary": "List my orders (buyer/seller)",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "role", "in": "query", "schema": { "type": "string", "enum": ["buyer","seller"] } },
          { "name": "status", "in": "query", "schema": { "type": "string", "enum": ["PENDING","ACCEPTED","DECLINED","CANCELLED","COMPLETED"] } },
          { "name": "page", "in": "query", "schema": { "type": "integer", "minimum": 1 } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "minimum": 1, "maximum": 50 } }
        ],
        "responses": { "200": { "description": "OK" } }
      },
      "post": {
        "summary": "Create order for listing",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/OrderCreate" }, "example": { "listingId": "3" } } } },
        "responses": { "201": { "description": "Created" }, "409": { "description": "Listing not available" } }
      }
    },

    "/api/orders/{id}": {
      "get": {
        "summary": "Get order by id (serial|uuid|_id)",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK" }, "404": { "description": "Not found" } }
      }
    },

    "/api/orders/{id}/accept": {
      "patch": {
        "summary": "Seller accepts order",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK" }, "403": { "description": "Forbidden" } }
      }
    },
    "/api/orders/{id}/decline": {
      "patch": {
        "summary": "Seller declines order",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/orders/{id}/cancel": {
      "patch": {
        "summary": "Buyer cancels order",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK" } }
      }
    },
    "/api/orders/{id}/complete": {
      "patch": {
        "summary": "Mark order as completed",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK" } }
      }
    },

    "/api/orders/{id}/messages": {
      "get": {
        "summary": "List messages for order (buyer/seller only)",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string" } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "default": 50 } }
        ],
        "responses": { "200": { "description": "OK" }, "403": { "description": "Forbidden" } }
      },
      "post": {
        "summary": "Post message to order (buyer/seller only)",
        "tags": ["Orders"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "id", "in": "path", "required": true, "schema": { "type": "string" } }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/MessageCreate" }, "example": { "text": "Καλησπέρα! Πότε στέλνεις;" } } } },
        "responses": { "201": { "description": "Created" } }
      }
    },

    "/api/favorites": {
      "get": {
        "summary": "List my favorites",
        "tags": ["Favorites"],
        "security": [{ "bearerAuth": [] }],
        "responses": { "200": { "description": "OK" } }
      }
    },

    "/api/favorites/{listingId}": {
      "post": {
        "summary": "Add to favorites",
        "tags": ["Favorites"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "listingId", "in": "path", "required": true, "schema": { "type": "string" }, "description": "serial | uuid | _id" }],
        "responses": { "201": { "description": "Created" } }
      },
      "delete": {
        "summary": "Remove from favorites",
        "tags": ["Favorites"],
        "security": [{ "bearerAuth": [] }],
        "parameters": [{ "name": "listingId", "in": "path", "required": true, "schema": { "type": "string" } }],
        "responses": { "200": { "description": "OK" } }
      }
    },

    "/api/reviews": {
      "post": {
        "summary": "Create review (only after COMPLETED order)",
        "tags": ["Reviews"],
        "security": [{ "bearerAuth": [] }],
        "requestBody": { "required": true, "content": { "application/json": { "schema": { "$ref": "#/components/schemas/ReviewCreate" }, "example": { "orderId": "7", "rating": 5, "comment": "Όλα τέλεια!" } } } },
        "responses": { "201": { "description": "Created" }, "400": { "description": "Not eligible" } }
      },
      "get": {
        "summary": "List reviews for seller",
        "tags": ["Reviews"],
        "parameters": [{ "name": "seller", "in": "query", "required": true, "schema": { "type": "string" }, "description": "serial | uuid | _id (seller)" }],
        "responses": { "200": { "description": "OK" } }
      }
    }
  },

  "components": {
    "securitySchemes": {
      "bearerAuth": { "type": "http", "scheme": "bearer", "bearerFormat": "JWT" }
    },
    "schemas": {
      "UserPublic": {
        "type": "object",
        "properties": {
          "id": { "type": "string", "description": "publicId (uuid)" },
          "email": { "type": "string" },
          "username": { "type": "string" },
          "name": { "type": "string" },
          "roles": { "type": "array", "items": { "type": "string" } },
          "serial": { "type": "integer" }
        }
      },

      "AuthRegisterBody": {
        "type": "object",
        "required": ["email","username","password"],
        "properties": {
          "email": { "type": "string", "format": "email" },
          "username": { "type": "string", "minLength": 3 },
          "name": { "type": "string" },
          "password": { "type": "string", "minLength": 6 }
        }
      },
      "AuthUserResponse": {
        "type": "object",
        "properties": { "user": { "$ref": "#/components/schemas/UserPublic" } }
      },

      "LoginBody": {
        "type": "object",
        "required": ["email","password"],
        "properties": {
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string", "minLength": 6 }
        }
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "user": { "$ref": "#/components/schemas/UserPublic" },
          "accessToken": { "type": "string" }
        }
      },
      "ChangePasswordBody": {
        "type": "object",
        "required": ["currentPassword","newPassword"],
        "properties": {
          "currentPassword": { "type": "string", "minLength": 6 },
          "newPassword": { "type": "string", "minLength": 6 }
        }
      },
      "UpdateRolesBody": {
        "type": "object",
        "required": ["roles"],
        "properties": { "roles": { "type": "array", "items": { "type": "string", "enum": ["USER","SELLER","ADMIN"] } } }
      },

      "CategoryCreate": {
        "type": "object",
        "required": ["name"],
        "properties": {
          "name": { "type": "string", "minLength": 2 },
          "slug": { "type": "string" },
          "parentId": { "type": "string", "nullable": true }
        }
      },
      "CategoryUpdate": {
        "type": "object",
        "properties": {
          "name": { "type": "string" },
          "slug": { "type": "string" },
          "parentId": { "type": "string", "nullable": true }
        }
      },

      "ListingCreate": {
        "type": "object",
        "required": ["title","price"],
        "properties": {
          "title": { "type": "string", "minLength": 3 },
          "description": { "type": "string" },
          "condition": { "type": "string", "enum": ["NEW_WITH_TAGS","NEW","EXCELLENT","GOOD","FAIR"] },
          "price": { "type": "number", "minimum": 0 },
          "currency": { "type": "string", "default": "EUR" },
          "tags": { "type": "array", "items": { "type": "string" } },
          "categories": { "type": "array", "items": { "type": "string" }, "description": "δεχόμαστε slug ή _id ή serial (server τα λύνει)" }
        }
      },
      "ListingUpdate": {
        "type": "object",
        "properties": {
          "title": { "type": "string" },
          "description": { "type": "string" },
          "condition": { "type": "string", "enum": ["NEW_WITH_TAGS","NEW","EXCELLENT","GOOD","FAIR"] },
          "price": { "type": "number" },
          "currency": { "type": "string" },
          "tags": { "type": "array", "items": { "type": "string" } },
          "categories": { "type": "array", "items": { "type": "string" } }
        }
      },

      "OrderCreate": {
        "type": "object",
        "required": ["listingId"],
        "properties": {
          "listingId": { "type": "string", "description": "serial | uuid | _id" }
        }
      },

      "MessageCreate": {
        "type": "object",
        "required": ["text"],
        "properties": { "text": { "type": "string", "minLength": 1, "maxLength": 1000 } }
      },

      "ReviewCreate": {
        "type": "object",
        "required": ["orderId","rating"],
        "properties": {
          "orderId": { "type": "string", "description": "serial | uuid | _id (order)" },
          "rating": { "type": "integer", "minimum": 1, "maximum": 5 },
          "comment": { "type": "string" }
        }
      }
    }
  }
}
